version 1

# basic structure
snippet #! "shebang"
	#!/usr/bin/perl

snippet pragma "default pragmas"
	use strict;
	use warnings;

snippet name "program name doc"
	=head1 NAME

	B<${1:program name}> - ${2:description}
	=cut

snippet synopsis "synopsis doc"
	=head1 SYNOPSIS

	${1:synopsis}
	=cut

snippet option "command line option doc"
	=head1 OPTIONS

	=over
	
	=item I<${1:option}>

	=back
	=cut

snippet getopt "command line options"
	GetOptions(
							${0}
						) or die 'Invalid Option';

snippet getoptarray "command line options"
	GetOptionsFromArray	( \${1:<array>},
												${0}
											) or die 'Invalid Option';
# Moose
snippet class "Moose class"
	package ${1:<package name>};

	use Moose;

	${0:${VISUAL}}

	no Moose;
	1;

snippet attr "object attribute"
	has ${1:<attribute name>} =>
	(
		is			=> 'rw',
		isa			=> '${2:Maybe[${3:<type>}]}',
		deafult	=> ${4:<deafult value>},
	);

# basic syntax
snippet if "if control flow"
	if( ${1:<condition>} )
	{
		${0:${VISUAL}}
	}

snippet if1 "if control flow oneliner"
	${2:<statement>} if ${1:<condition>};

snippet else "else control flow"
	else
	{
		${0:${VISUAL}}
	}

snippet unless "unless control flow"
	unless( ${1:<condition>} )
	{
		${0:${VISUAL}}
	}

snippet unless1 "unless control flow oneliner"
	${2:statement} unless ${1:<condition>};

snippet while "while control flow"
	while( ${1:<condition>} )
	{
		${0:${VISUAL}}
	}

snippet while1 "while control flow oneliner"
	${2:<statement>} while ${1:<condition>};

snippet until "until control flow"
	until( ${1:<condition>} )
	{
		${0:${VISUAL}}
	}

snippet until1 "until control flow oneliner"
	${2:<statement>} until ${1:<condition>};

snippet for "for control flow"
	for my ${1:<var>} ( ${2:<list>} )
	{
		${0:${VISUAL}}
	}

snippet for1 "for control flow oneliner"
	${2:<statement>} for ${1:<condition>};

snippet func "function"
	sub ${1:<function name>}
	{
		${0:${VISUAL}}
	}

snippet package "package"
	package ${1:<package name>};

	${0:${VISUAL}}

	1;

snippet method "object method"
	sub ${1:<method name>}
	{
		my $self = shift;

		${0:${VISUAL}}
	}

snippet openr "open file for read"
	open my ${1:<file handle>}, '<', ${2:<file name>};

	while( <${1}> )
	{
		${0:${VISUAL}}
	}
	close ${1};

snippet openw "open file for write"
	open my ${1:<file handle>}, '>', ${2:<file name>};

	${0:${VISUAL}}

	close ${1}
